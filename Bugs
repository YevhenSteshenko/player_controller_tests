---------------------------------------------------General--------------------------------------------------------------

    All General errors should be discuss with a team.
    Issue 1:
    name:           Add more description for parameters in swagger.
    description:    Need to provide more details for params in Swagger.
                    Example:
                        - Age: missing information about range. Now it's passed in range (17 - 60)
                        - Role: need to add description which Enum value is using here
                        - Gender: need to add description which Enum value is using here
                        - Editor: no description about this entity.




------------------------------------------GET /player/create/{editor}---------------------------------------------------

    Issue 2:
    name:           GET /player/create/{editor} use GET request instead of POST.
    description:    Better to switch player/create to POST HTTP Request with Body instead of GET with path_params


    Issue 3:
    name:           CR: Need to discuss, provide and implement 1 consistent decision for failed response.
    NOTE:           Failed responses behavior is pretty chaotic. I could create 10 bugs but I think it's better here
                    create 1 change request. Here need Analytic and Backend engineers discuss and make decision
                    for 1 consistent behavior when request failed.
    examples:       1.
                    Description:        Editor without permissions to create Player.
                    Request:            GET http://3.68.165.45/player/create/user?login=OZKcd33721&password=JFVqa96987&screenName=OPHYH10286&gender=male&role=user&age=47
                    Status code:        403
                    Root cause descr:   NO
                    2.
                    Description:        Player with nonexistent role.
                    Request:            GET http://3.68.165.45/player/create/supervisor?login=UzJir35128&password=RiHcJ27209&screenName=niktp27126&gender=female&role=nonexistent_player_role&age=49
                    Status code:        400
                    Root cause descr:   NO
                    3.
                    Description:        Nonexistent Editor.
                    Request:            GET http://3.68.165.45/player/create/nonexistent?login=GZeVp09479&password=Qzzaw58831&screenName=BbRIe18017&gender=female&role=user&age=33
                    Status code:        403
                    Root cause descr:   NO
                    4.
                    Description:        No mandatory path parameter.
                    Request:            GET http://3.68.165.45/player/create/supervisor?password=uvdiA56555&screenName=ByYdV77079&gender=male&role=user&age=52
                    Status code:        400
                    Root cause descr:   YES/Poor
                    5.
                    Description:        Path param "age" out of range.
                    Request:            GET http://3.68.165.45/player/create/supervisor?password=uvdiA56555&screenName=ByYdV77079&gender=male&role=user&age=52
                    Status code:        400
                    Root cause descr:   NO
                    6.
                    Description:        Missing Editor(I think this is only one correct behavior here)
                    Request:            GET http://3.68.165.45/player/create/?login=aMpAp48470&password=YXkpj61205&screenName=yTreZ02409&gender=female&role=user&age=29
                    Status code:        404
                    Root cause descr:   YES/Poor

    suggestions:    Discuss, provide and implement 1 consistent decision for failed response. Add more details in
                    Error messages. Provide details in Swagger. Now 400 code has no description in Swagger but has two
                    different behavior as we see from case.
    conclusion:     With such behavior as we have now we can cover only status codes checks and
                    when behavior will be consistent then other checks will be added


    Issue 4:
    name:           When player created via GET /player/create/{editor} request Backend returns only "id" and "login" fields
    description:    Perform any request which created new Player:
                    e.g. http://3.68.165.45/player/create/supervisor?login=UdZof64264&password=sQVlX69002&screenName=djaAk69214&gender=male&role=user&age=17
                    Backend respond with Code 200 and Body:
                    {
                      "id": 2024912916,
                      "login": "UdZof64264",
                      "password": null,
                      "screenName": null,
                      "gender": null,
                      "age": null,
                      "role": null
                    }
                    Endpoint POST http://3.68.165.45/player/get
                    {
                      "playerId": 2024912916
                    }
                    return all correct values
                    {
                      "id": 2024912916,
                      "login": "UdZof64264",
                      "password": "sQVlX69002",
                      "screenName": "djaAk69214",
                      "gender": "male",
                      "age": 17,
                      "role": "user"
                    }

                    Expected that all fields will be fill out with sent parameters


    Issue 5:
    name:           GET /player/create/{editor} gender field should pass only for options from Enum.
    description:    Now Backend pass any string value instead of validate it based on Enum options:
                    GET http://3.68.165.45/player/create/supervisor?login=UdZof64264&password=sQVlX69002&screenName=djaAk69214&gender=sjbfsbd&role=user&age=17
                    {
                      "id": 2024912916,
                      "login": "UdZof64264",
                      "password": "sQVlX69002",
                      "screenName": "djaAk69214",
                      "gender": "sjbfsbd",
                      "age": 17,
                      "role": "user"
                    }
                    Need to add correct field validation for this field.


    Critical:
    Issue 6:
    name:           GET /player/create/{editor} Password field should be mandatory
    description:    (Ofcourse I didn't see any reqs but when some User-type entity created Password it's an mandatory field)
                    Now when new Player created via GET /player/create/{editor} request field Password could be skipped.
                    Need to mark it as mandatory.


    Critical:
    Issue 7:
    name:           GET /player/create/{editor} Player updated via Create endpoint.
    description:    (Actually here I'm not sure this is a bug not a feature but behavior kind a strange)
                    Based on Backend logic it Create new Player entity in case when request contains "login" value
                    which is absent in db. But in case when "login" already present in db Backend update other fields
                    instead of show some error message that user with such "login" already exist.






------------------------------------------DELETE /player/delete/{editor}---------------------------------------------------
-----------------------------------------------POST /player/get------------------------------------------------------------
    Issue :
    name:           POST /player/get use POST request instead of GET.
    description:    Better to switch player/get to GET HTTP Request with path_params instead of POST with body.
---------------------------------------------GET /player/get/all-----------------------------------------------------------
----------------------------------------PATCH /player/update/{editor}/{id}-------------------------------------------------

    Issue :
    name:           PATCH /player/update/{editor}/{id} Role field can't be updated.
    description:    When we try to update "role" field via PATCH /player/update/{editor}/{id} we get 200 status code
                    but field save previous value.
                    ### Update Player
                    PATCH http://3.68.165.45/player/update/supervisor/1937342674
                    Content-Type: application/json
                    Accept: */*
                    {
                      "role": "admin"
                    }
                    Response:
                    HTTP/1.1 200
                    {
                      "id": 1937342674,
                      "login": "OUfoY44626",
                      "screenName": "yKmEE60578",
                      "gender": "male",
                      "age": 60,
                      "role": "user"
                    }
